[[https://melpa.org/#/org-appear][file:https://melpa.org/packages/org-appear-badge.svg]]
[[https://github.com/awth13/org-appear/actions/workflows/check.yml][file:https://github.com/awth13/org-appear/actions/workflows/check.yml/badge.svg?branch=master]]

* ~org-appear~

Make invisible parts of Org elements appear visible.

** About

[[https://orgmode.org/][Org mode]] provides a way to toggle visibility of hidden elements such as emphasis markers, links, etc. by customising specific variables, e.g., ~org-hide-emphasis-markers~. However, it is currently not possible to do this interactively and on an element-by-element basis. This package, inspired by [[https://github.com/io12/org-fragtog][org-fragtog]], enables automatic visibility toggling depending on cursor position. Hidden element parts appear when the cursor enters an element and disappear when it leaves.

[[file:demo.gif]]

** Installation

The easiest way to install ~org-appear~ is from MELPA, using your favourite package manager or ~package-install~. For Guix users, ~org-appear~ is also available in the official GNU Guix channel.

*** Straight.el

With [[https://github.com/raxod502/straight.el][straight.el]], simply put the following line in ~init.el~:

#+begin_src emacs-lisp

  (straight-use-package '(org-appear :type git :host github :repo "awth13/org-appear"))

#+end_src

Alternatively, git clone this repository and point Emacs to it using the ~:load-path~ keyword of ~use-package~ or ~require~.

** Usage

The package can be enabled interactively or automatically on org-mode start-up:

#+begin_src emacs-lisp

  (add-hook 'org-mode-hook 'org-appear-mode)

#+end_src

** Customization

By default, toggling is instantaneous and only emphasis markers are toggled. The following custom variables can be changed to enable/disable functionality.

| Variable                  | Description                                     | Default |
|---------------------------+-------------------------------------------------+---------|
| org-appear-autoemphasis   | Non-nil toggles emphasis and verbatim markers   | t       |
| org-appear-autosubmarkers | Non-nil toggles subscripts and superscripts     | nil     |
| org-appear-autoentities   | Non-nil toggles [[https://orgmode.org/manual/Special-Symbols.html][org entities]].                   | nil     |
| org-appear-autolinks      | Non-nil toggles links                           | nil     |
| org-appear-autokeywords   | Non-nil toggles keywords in ~org-hidden-keywords~ | nil     |
| org-appear-delay          | Delay in seconds before toggling                | 0.0     |

#+BEGIN_QUOTE
If Org mode custom variables that control visibility of elements are configured to show hidden parts, the respective ~org-appear~ settings do not have an effect.
#+END_QUOTE

** Acknowledgements

Special thanks to [[https://github.com/SPFabGerman][SPFabGerman]], who came up with the idea and extended ~org-appear~ beyond emphasis marker toggling, and [[https://github.com/daviwil][daviwil]], who proposed the ~org-appear~ name.

** Known Issues

~org-appear~ does not handle overlapping emphasis elements correctly, e.g.,

#+begin_example
  *Why would someone /nest emphasis* like that?/
#+end_example

In the above example, ~org-appear~ can only detect and reveal the first (bold) element. This is due to the reliance on the ~org-element~ API -- ~org-element-context~ in particular -- which also fails to detect the second (italic) element.

~org-appear~ will fail to detect elements nested inside certain other elements, such as comments or document titles.
